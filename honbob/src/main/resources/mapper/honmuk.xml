<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">






<!-- Mybatis 사용 -->
<mapper namespace="Honmuk">
	<!-- 검색결과 식당리스트 불러오기 -->
	<select id="searchList" parameterType="vo.RestaurantVO" resultType="vo.RestaurantVO">
	
		<!-- 위치가 입력되지 않았을때 -->
		<if test="latitude == 0 and longitude == 0">		
	
			select a.*, b.res_image_name from restaurant a inner join restaurantimage b on a.res_num = b.res_num
			<where>
				<!-- 키워드가 입력되었을때 -->
				<if test="keyword != null and keyword != ''">
					res_name like '%${keyword}%'
				</if>
			
				<!-- 카테고리 설정 -->
				<if test ="koreafood == 1 or japanfood == 1 or westernfood == 1 or chinafood == 1 or etcfood == 1">
				<if test="keyword != null and keyword != ''">
					and
				</if>
					(
					
					<if test="koreafood == 1">
						koreafood='1' 
					</if>
					<if test="japanfood == 1">
						<if test="koreafood == 1">
							or
						</if>
						japanfood='1' 
					</if>
					<if test="westernfood == 1">
						<if test="koreafood == 1 or japanfood == 1">
							or
						</if>
						westernfood='1' 
					</if>
					<if test="chinafood == 1">
						<if test="koreafood == 1 or japanfood == 1 or westernfood == 1">
							or
						</if>
						chinafood='1' 
					</if>
					<if test="etcfood == 1">
						<if test="koreafood == 1 or japanfood == 1 or westernfood == 1 or chinafood == 1">
							or
						</if>
						etcfood='1'
					</if>
					
					) 
			 	</if>
			 	 and b.best_image='1'
			 	  
				<if test="drink == 1">
					and drink='1' 
				</if>
				<if test="partition2 == 1">
					and partition2='1' 
				</if>
				<if test="calculator == 1">
					and calculator='1' 
				</if>
				<if test="park == 1">
					and park='1' 
				</if>
				<if test="table2 == 1">
					and table2='1' 
				</if>
				
			</where>		
				
			<if test="grade == 1">
				order by grade desc
			</if>
			<if test="readcount == 1">
				order by readcount desc
			</if>
			<if test="reviewcount == 1">
				order by reviewcount desc
			</if>
		
		</if>
		
		<!-- 위도경도가 입력되었을때 -->
		<if test="latitude != 0 and longitude != 0">
		<![CDATA[
			SELECT a.* , b.res_image_name, ( 6371 * acos( cos( radians(${latitude}) ) * cos( radians( latitude ) ) * cos( radians( longitude )
			 - radians(${longitude}) ) + sin( radians(${latitude}) ) * sin( radians( latitude ) ) ) ) AS distance ]]> 
			 FROM restaurant a inner join restaurantimage b on a.res_num = b.res_num 
			 <where>
				<!-- 키워드가 입력되었을때 -->
				<if test="keyword != null and keyword != ''">
					res_name like '%${keyword}%'
				</if>
			
				<!-- 카테고리 설정 -->
				<if test ="koreafood == 1 or japanfood == 1 or westernfood == 1 or chinafood == 1 or etcfood == 1">
				<if test="keyword != null and keyword != ''">
					and
				</if>
					(
					
					<if test="koreafood == 1">
						koreafood='1' 
					</if>
					<if test="japanfood == 1">
						<if test="koreafood == 1">
							or
						</if>
						japanfood='1' 
					</if>
					<if test="westernfood == 1">
						<if test="koreafood == 1 or japanfood == 1">
							or
						</if>
						westernfood='1' 
					</if>
					<if test="chinafood == 1">
						<if test="koreafood == 1 or japanfood == 1 or westernfood == 1">
							or
						</if>
						chinafood='1' 
					</if>
					<if test="etcfood == 1">
						<if test="koreafood == 1 or japanfood == 1 or westernfood == 1 or chinafood == 1">
							or
						</if>
						etcfood='1'
					</if>
					
					) 
			 	</if>
			 	 and b.best_image='1'
			 	  
				<if test="drink == 1">
					and drink='1' 
				</if>
				<if test="partition2 == 1">
					and partition2='1' 
				</if>
				<if test="calculator == 1">
					and calculator='1' 
				</if>
				<if test="park == 1">
					and park='1' 
				</if>
				<if test="table2 == 1">
					and table2='1' 
				</if>
				
			</where>			  
			 <![CDATA[
		HAVING distance < 2 order by distance 
		]]>
			<if test="grade == 1">
				, grade desc
			</if>
			<if test="readcount == 1">
				, readcount desc
			</if>
			<if test="reviewcount == 1">
				, reviewcount desc
			</if>
		
		</if>
		
		limit #{startIndex}, #{limit};
	</select>	
		
	
	
	<select id="searchCount" parameterType="vo.RestaurantVO" resultType="Integer">
	
		<if test="latitude == 0 and longitude == 0">		
	
			select count(*) from restaurant 
			<where>
				<!-- 키워드가 입력되었을때 -->
				<if test="keyword != null and keyword != ''">
					res_name like '%${keyword}%'
				</if>
			
				<!-- 카테고리 설정 -->
				<if test ="koreafood == 1 or japanfood == 1 or westernfood == 1 or chinafood == 1 or etcfood == 1">
				<if test="keyword != null and keyword != ''">
					and
				</if>
					(
					
					<if test="koreafood == 1">
						koreafood='1' 
					</if>
					<if test="japanfood == 1">
						<if test="koreafood == 1">
							or
						</if>
						japanfood='1' 
					</if>
					<if test="westernfood == 1">
						<if test="koreafood == 1 or japanfood == 1">
							or
						</if>
						westernfood='1' 
					</if>
					<if test="chinafood == 1">
						<if test="koreafood == 1 or japanfood == 1 or westernfood == 1">
							or
						</if>
						chinafood='1' 
					</if>
					<if test="etcfood == 1">
						<if test="koreafood == 1 or japanfood == 1 or westernfood == 1 or chinafood == 1">
							or
						</if>
						etcfood='1'
					</if>
					
					) 
			 	</if>
			 	  
				<if test="drink == 1">
					and drink='1' 
				</if>
				<if test="partition2 == 1">
					and partition2='1' 
				</if>
				<if test="calculator == 1">
					and calculator='1' 
				</if>
				<if test="park == 1">
					and park='1' 
				</if>
				<if test="table2 == 1">
					and table2='1' 
				</if>
				
			</where>		
		
		</if>
		
		<!-- 위도경도가 입력되었을때 -->
		<if test="latitude != 0 and longitude != 0">
		<![CDATA[
			select count(*) from(
				SELECT *, ( 6371 * acos( cos( radians(${latitude}) ) * cos( radians( latitude ) ) * cos( radians( longitude )
				 - radians(${longitude}) ) + sin( radians(${latitude}) ) * sin( radians( latitude ) ) ) ) AS distance FROM restaurant 
				 ]]>
				 
			<where>
				<!-- 키워드가 입력되었을때 -->
				<if test="keyword != null and keyword != ''">
					res_name like '%${keyword}%'
				</if>
			
				<!-- 카테고리 설정 -->
				<if test ="koreafood == 1 or japanfood == 1 or westernfood == 1 or chinafood == 1 or etcfood == 1">
				<if test="keyword != null and keyword != ''">
					and
				</if>
					(
					
					<if test="koreafood == 1">
						koreafood='1' 
					</if>
					<if test="japanfood == 1">
						<if test="koreafood == 1">
							or
						</if>
						japanfood='1' 
					</if>
					<if test="westernfood == 1">
						<if test="koreafood == 1 or japanfood == 1">
							or
						</if>
						westernfood='1' 
					</if>
					<if test="chinafood == 1">
						<if test="koreafood == 1 or japanfood == 1 or westernfood == 1">
							or
						</if>
						chinafood='1' 
					</if>
					<if test="etcfood == 1">
						<if test="koreafood == 1 or japanfood == 1 or westernfood == 1 or chinafood == 1">
							or
						</if>
						etcfood='1'
					</if>
					
					) 
			 	</if>
			 	  
				<if test="drink == 1">
					and drink='1' 
				</if>
				<if test="partition2 == 1">
					and partition2='1' 
				</if>
				<if test="calculator == 1">
					and calculator='1' 
				</if>
				<if test="park == 1">
					and park='1' 
				</if>
				<if test="table2 == 1">
					and table2='1' 
				</if>
				
			</where>
			<![CDATA[			  
				 HAVING distance < 2 
			]]>
			) as a		
		</if>		
	</select>
	
	
	<select id="visitList" parameterType="vo.RestaurantVO" resultType="vo.RestaurantVO">
		select a.*, b.res_image_name from restaurant a inner join restaurantimage b on a.res_num = b.res_num where b.best_image='1' and a.res_num in
		<foreach collection="visit_num" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>
	
	<!-- 전체 식당 리스트 불러오기 -->
	<select id="getList" resultType="vo.RestaurantVO">
		select * from restaurant;
	</select>
	<!-- id로 식당 정보 가져오기 -->
	<select id="getRestaurantById" parameterType="Integer" resultType="vo.RestaurantVO">
		select * from restaurant where res_num=#{res_num}
	</select>
	<!-- 식당 번호로 식당사진 불러오기 -->
	<select id ="getImage" resultType="vo.RestaurantImageVO" parameterType="Integer">
		select * from restaurantImage where res_num=#{res_num}
	</select>
	<!-- 식당 대표 사진 불러오기 -->
	<select id ="getBestImage" resultType="vo.RestaurantImageVO" parameterType="Integer">
		select * from restaurantImage where best_image=1 and res_num=#{res_num}
	</select>
	<!-- imageDB 등록 -->
	<insert id="registImageVO" parameterType="vo.RestaurantImageVO">
		insert into restaurantImage(res_image_num,res_num,best_image,res_image_name)
							values(#{res_image_num},#{res_num},#{best_image},#{res_image_name})
	</insert>
	<!-- 조회수 올리기 -->
	<update id="upViewCount" parameterType="Integer">
		update restaurant set readcount = readcount+1 where res_num=#{res_num}
	</update>
	<!-- 별점 합가져오기 -->
	<select id="getGradeSum" resultType="Integer">
		select sum(grade) from grade where res_num=#{res_num}
	</select>
	<!-- 별점한 사람 수 가져오기 -->
	<select id="getGradeCnt" resultType="Integer">
		select count(grade) from grade where res_num=#{res_num}
	</select>
	<!-- 추천식당 가져오기 -->
	<select id="getRecommandRestaurant" parameterType="vo.RestaurantVO" resultType="vo.RestaurantVO">
		select * from restaurant 
		<where> 
			<if test="koreafood == 1">
				koreafood='1'
			</if>
			<if test="japanfood == 1">
				 or japanfood='1'
			</if>
			<if test="westernfood == 1">
				 or westernfood='1'
			</if>
			<if test="chinafood == 1">
				 or chinafood='1'
			</if>
			<if test="etcfood == 1">
				 or etcfood='1' 
			</if>
		</where>
		order by readcount desc limit 4
	</select>
	<!-- 유저가 별점을 했는지 찾아본다 -->
	<select id="getUserGrade" parameterType="vo.GradeVO" resultType="Integer">
		select grade from grade where res_num=#{res_num} and userNo = #{userNo}
	</select>
	<!-- insertGrade -->
	<insert id="insertGrade" parameterType="vo.GradeVO">
		insert into grade(res_num,userNo,grade) values (#{res_num},#{userNo},#{grade})
	</insert>
	<!-- updateGrade -->
	<update id="updateGrade" parameterType="vo.GradeVO">
		update grade set grade = #{grade} where res_num=#{res_num} and userNo = #{userNo}
	</update>
	<!-- deleteGrade -->
	<delete id="deleteGrade" parameterType="vo.GradeVO">
		delete from grade
		where res_num=#{res_num} and userNo = #{userNo}
	</delete>
	<!-- updateRestaurantGrade -->
	<update id="updateRestaurantGrade" parameterType="vo.RestaurantVO">
		update restaurant set grade = #{grade} where res_num=#{res_num}
	</update>
	<!-- 리뷰 리스트 가져오기 -->
	<select id="getReviewList" parameterType="Integer" resultType="vo.review.ReviewVO">
		select * from review where res_num=#{res_num}
	</select>
	<!-- 리뷰 숫자 가져오기 -->
	<select id="getReviewCount" parameterType="Integer" resultType="Integer">
		select count(*) from review where res_num=#{res_num}
	</select>
	<!-- 유저 정보 가지고오기 -->
	<select id="getUserInfo" parameterType="Integer" resultType="vo.UserVO">
		select * from user where userNo = #{userNo}
	</select>
	<!-- 메인페이지에서 별점순 추천식당6개 가져오기 -->
	<select id="mainList" resultType="vo.RestaurantVO" parameterType="vo.RestaurantVO">
			select res_num, res_name, grade, address,
			(select group_concat(res_image_name) as res_image_name from restaurantimage where res_num=restaurantvo.res_num) as res_image_name 
			from restaurantvo order by grade desc limit 0,6

	</select>
	
</mapper>
